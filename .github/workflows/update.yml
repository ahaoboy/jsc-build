name: update

permissions:
  contents: write

on:
  push:
    branches:
      - "main"
  schedule:
    - cron: "0 0 * * 1"
  pull_request:

jobs:
  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - name: install
        run: |
          git clone https://github.com/WebKit/WebKit.git WebKit --depth=1

          cd WebKit
          ./Tools/Scripts/build-webkit --release --jsc-only --cmakeargs="-DENABLE_STATIC_JSC=ON"

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: jsc-macos
          path: ./WebKitBuild/Release/bin/jsc

  build-ubuntu:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - uses: denoland/setup-deno@v1
      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      - name: install
        run: |
          sudo apt update

          sudo apt install wget unzip python3 -y

          # https://help.ubuntu.com/community/WebKit
          sudo apt-get install subversion gtk-doc-tools autoconf automake libtool libgtk2.0-dev libpango1.0-dev libicu-dev libxslt-dev libsoup2.4-dev libsqlite3-dev gperf bison flex libjpeg62-dev libpng12-dev libxt-dev autotools-dev libgstreamer-plugins-base0.10-dev libenchant-dev libgail-dev -y

          git clone https://github.com/WebKit/WebKit.git WebKit --depth=1

          cd WebKit
          ./Tools/Scripts/build-webkit --release --jsc-only --cmakeargs="-DENABLE_STATIC_JSC=ON"

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: jsc-ubuntu
          path: ./WebKitBuild/Release/bin/jsc
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          path-type: inherit
          install: >-
            mingw-w64-x86_64-make
            mingw-w64-x86_64-cmake
            mingw-w64-x86_64-gcc
            mingw-w64-x86_64-clang
            mingw-w64-x86_64-perl
            mingw-w64-x86_64-python3
            zip
            unzip
            curl
            wget

      - name: install
        shell: msys2 {0}
        run: |
          a
      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: windows
          path: ./windows.json
  update:
    needs: [
        "build-ubuntu",
        # "build-windows",
        "build-macos",
      ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      # - uses: actions/download-artifact@v4
      #   with:
      #     path: windows
      #     pattern: windows
      #     merge-multiple: true
      - uses: actions/download-artifact@v4
        with:
          path: ubuntu
          pattern: jsc-ubuntu
          merge-multiple: true
      - uses: actions/download-artifact@v4
        with:
          path: macos
          pattern: jsc-macos
          merge-multiple: true
