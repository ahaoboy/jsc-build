name: build

permissions:
  contents: write

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

on:
  push:
    branches:
      - "main"
    tags:
      - "v*"
  schedule:
    - cron: "0 0 * * 1"
  pull_request:

jobs:
  build-macos-aarch64:
    if: false
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: "temurin" # See 'Supported distributions' for available options
          java-version: "21"
      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable
      - name: install
        run: |
          xcodebuild -version
          xcode-select --version
          # xcode-select --install
          # brew install cocoapods
          brew install icu4c

          git clone https://github.com/WebKit/WebKit.git WebKit --depth=1

      - name: build
        run: |
          cd WebKit
          # ./Tools/Scripts/build-webkit --release --jsc-only --cmakeargs="-DENABLE_STATIC_JSC=ON"
          ./Tools/Scripts/build-webkit --release --jsc-only --cmakeargs="-DENABLE_STATIC_JSC=ON -DSHOW_BINDINGS_GENERATION_PROGRESS=0 -DDEVELOPER_MODE=OFF -DENABLE_EXPERIMENTAL_FEATURES=OFF"

          cd ./WebKitBuild/JSCOnly/Release
          tar -cJf jsc-aarch64-apple-darwin.tar.xz ./bin/jsc ./lib

      - name: test
        run: |
          ./WebKit/WebKitBuild//JSCOnly/Release/bin/jsc ./test.js

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: jsc-aarch64-apple-darwin
          path: ./WebKit/WebKitBuild/JSCOnly/Release/jsc-aarch64-apple-darwin.tar.xz
  build-macos-x86_64:
    if: false
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: "temurin" # See 'Supported distributions' for available options
          java-version: "21"
      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable
      - name: install
        run: |
          xcodebuild -version
          xcode-select --version

          # xcode-select --install
          # brew install cocoapods
          brew install icu4c

          git clone https://github.com/WebKit/WebKit.git WebKit --depth=1

      - name: build
        run: |
          cd WebKit
          # ./Tools/Scripts/build-webkit --release --jsc-only --cmakeargs="-DENABLE_STATIC_JSC=ON"
          ./Tools/Scripts/build-webkit --release --jsc-only --cmakeargs="-DENABLE_STATIC_JSC=ON -DSHOW_BINDINGS_GENERATION_PROGRESS=0 -DDEVELOPER_MODE=OFF -DENABLE_EXPERIMENTAL_FEATURES=OFF"

          cd ./WebKitBuild/JSCOnly/Release
          tar -cJf jsc-x86_64-apple-darwin.tar.xz ./bin/jsc ./lib

      - name: test
        run: |
          ./WebKit/WebKitBuild//JSCOnly/Release/bin/jsc ./test.js

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: jsc-x86_64-apple-darwin
          path: ./WebKit/WebKitBuild/JSCOnly/Release/jsc-x86_64-apple-darwin.tar.xz

  build-ubuntu:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - name: install
        run: |
          sudo apt update

          sudo apt install wget unzip python3 ruby-full tree icu-devtools libicu74 libicu-dev -y

          # https://help.ubuntu.com/community/WebKit
          sudo apt-get install subversion autoconf automake libtool gperf bison flex autotools-dev -y

          git clone https://github.com/WebKit/WebKit.git WebKit --depth=1

      - name: build
        run: |
          cd WebKit
          # ./Tools/Scripts/build-webkit --release --jsc-only --cmakeargs="-DENABLE_STATIC_JSC=ON"
          ./Tools/Scripts/build-webkit --release --jsc-only --cmakeargs="-DENABLE_STATIC_JSC=ON"

          cd ./WebKitBuild/JSCOnly/Release
          tar -cJf jsc-x86_64-unknown-linux-gnu.tar.xz ./bin/jsc ./lib

      - name: test
        run: |
          ./WebKit/WebKitBuild//JSCOnly/Release/bin/jsc ./test.js

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: jsc-x86_64-unknown-linux-gnu
          path: ./WebKit/WebKitBuild/JSCOnly/Release/jsc-x86_64-unknown-linux-gnu.tar.xz

      - name: release
        uses: ncipollo/release-action@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          tag: ${{ steps.build.outputs.tag }}
          artifacts: "./WebKit/WebKitBuild/JSCOnly/Release/jsc-x86_64-unknown-linux-gnu.tar.xz"
          allowUpdates: true
  build-windows:
    if: false
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: install
        run: |
          choco install -y xampp-81 python311 ruby cmake gperf llvm ninja perl

          # winget install --scope=machine --id Kitware.CMake Ninja-build.Ninja Python.Python.3.11 RubyInstallerTeam.Ruby.3.2 ApacheFriends.Xampp.8.2 LLVM.LLVM
          # winget install --id GnuWin32.Gperf

          python -m pip install pywin32
          git config --global core.autocrlf input
          git clone https://github.com/WebKit/WebKit.git WebKit --depth=1

      - name: build
        run: |
          ./env.bat
          cd WebKit
          perl Tools/Scripts/build-webkit --release --jsc-only --cmakeargs="-DENABLE_STATIC_JSC=ON"

          cd ./WebKitBuild/JSCOnly/Release
          tar -cJf jsc-x86_64-pc-windows-msvc.tar.xz ./bin/jsc.exe ./lib

      - name: test
        run: |
          ./WebKit/WebKitBuild//JSCOnly/Release/bin/jsc.exe ./test.js

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: jsc-x86_64-pc-windows-msvc
          path: ./WebKit/WebKitBuild/JSCOnly/Release/jsc-x86_64-pc-windows-msvc.tar.xz

  download:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - name: download
        run: |
          bash download.sh "https://s3-us-west-2.amazonaws.com/minified-archives.webkit.org/mac-sonoma-x86_64%20arm64-release" aarch64-apple-darwin
          bash download.sh "https://s3-us-west-2.amazonaws.com/minified-archives.webkit.org/mac-ventura-x86_64%20arm64-release" x86_64-apple-darwin
          bash download.sh "https://s3-us-west-2.amazonaws.com/archives.webkit.org/win-x86_64-release" x86_64-pc-windows-msvc

          # bash download.sh "https://s3-us-west-2.amazonaws.com/archives.webkit.org/wincairo-x86_64-release" x86_64-pc-windows-msvc

      - name: Upload jsc-aarch64-apple-darwin
        uses: actions/upload-artifact@v4
        with:
          name: jsc-aarch64-apple-darwin
          path: jsc-aarch64-apple-darwin.tar.xz

      - name: Upload jsc-x86_64-apple-darwin
        uses: actions/upload-artifact@v4
        with:
          name: jsc-x86_64-apple-darwin
          path: jsc-x86_64-apple-darwin.tar.xz
      - name: Upload x86_64-pc-windows-msvc
        uses: actions/upload-artifact@v4
        with:
          name: x86_64-pc-windows-msvc
          path: x86_64-pc-windows-msvc.tar.xz

      - name: release
        uses: ncipollo/release-action@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          tag: ${{ steps.build.outputs.tag }}
          artifacts: "*.tar.xz"
          allowUpdates: true

  test-release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: ["download", "build-ubuntu"]
    strategy:
      matrix:
        os: [ubuntu-24.04, macos-14, macos-13]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Set environment variable only on macOS
        if: startsWith(matrix.os, 'macos')
        run: |
          echo "DYLD_FRAMEWORK_PATH=/Users/runner/.easy-install/jsc/bin" >> $GITHUB_ENV
          echo "DYLD_LIBRARY_PATH=/Users/runner/.easy-install/jsc/bin" >> $GITHUB_ENV

      - name: wait
        run: |
          sleep 120
      - uses: easy-install/easy-setup@v1
        with:
          url: https://github.com/ahaoboy/jsc-build
      - name: test
        run: |
          which jsc
          jsc ./test.js
